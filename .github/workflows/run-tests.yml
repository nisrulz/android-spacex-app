name: "Run unit tests"

on:
  # Allows to run this workflow when a commit it pushed to the specified branches
  push:
    paths-ignore:
      - "**/*.md"
    branches:
      - main
  # Allows to run this workflow when a Pull Request is made with the set target branches
  pull_request:
    #
    paths-ignore:
      - "**/*.md"
    branches:
      - main
  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  # Limit concurrency to 1 for PRs. 'main' concurrency isn't limited.
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code at the latest commit in branch
        id: checkout-code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Setup and validate gradle wrapper
        # Will automatically perform wrapper validation on each execution.
        uses: gradle/actions/setup-gradle@v5

      - name: Set Up JDK
        uses: actions/setup-java@v5
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "gradle"

      - name: Cache Gradle and wrapper
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Run unit tests
        run: ./gradlew testReleaseUnitTest
